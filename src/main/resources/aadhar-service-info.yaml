swagger: '2.0'
info:
  description: 'This service provides to maintain the user aadhar information  '
  version: v1
  title: 'Aadhar Service System Demo '
  termsOfService: www.aadhardemo.com/
  contact:
    name: Xyz
    url: 'http://domain:9090/api/v1/aadhar-service'
    email: contact@aadharservice.com
  license:
    name: Aadhar Service License
    url: 'http://www.aadharservice.com/license'
host: 'localhost:9090'
basePath: /
tags:
  - name: aadhar-services
    description: 'This service maintain''s the aadhar record '
schemes:
  - http
paths:
  /api/v1/aadhar-service/aadhar-cards:
    post:
      tags:
        - Initiate
        - aadhar-services
      summary: 'User aadhar enrollment '
      description: Generate the aadhar ID
      operationId: Enroll aadhar information
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: User Aaadhar Information Request Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Successful Enrollment of Aadhar
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/v1/aadhar-service/aadhar-cards/aadhar-filters:
    get:
      tags:
        - Search
        - aadhar-services
      summary: Search user aadhar information
      description: ' Search Aadhar information'
      operationId: Search aadhar information
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: Query for search user aadhar records
          required: false
          type: integer
          format: int64
        - name: first-name
          in: query
          description: Query for search user aadhar records
          required: false
          type: string
        - name: last-name
          in: query
          description: Query for search user aadhar records
          required: false
          type: string
        - name: date-of-birth
          in: query
          description: Query for search user aadhar records
          required: false
          type: string
      responses:
        '200':
          description: Retrieve user information
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/v1/aadhar-service/aadhar-cards/{aadhar-id}':
    get:
      tags:
        - Search
        - aadhar-services
      summary: Retrieve  user aadhar information
      description: ' Retrieve aadhar information'
      operationId: Get aadhar information
      produces:
        - '*/*'
      parameters:
        - name: aadhar-id
          in: path
          description: user aadhar-id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: User aadhar information is successfully retrieved
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - Update
        - aadhar-services
      summary: Update user aadhar information
      description: ' Update Aadhar information'
      operationId: Update aadhar information
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: User Aaadhar Information Request Payload
          required: true
          schema:
            $ref: '#/definitions/User'
        - name: aadhar-id
          in: path
          description: aadhar-id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: User aadhar information is successfully updated
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - Delete
        - aadhar-services
      summary: Delete  user aadhar information
      description: ' Delete aadhar information of user'
      operationId: Delete aadhar information
      produces:
        - '*/*'
      parameters:
        - name: aadhar-id
          in: path
          description: ' user aadhar-id'
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description:
          schema:
            $ref: '#/definitions/User'
        '204':
          description: User aadhar information is successfully deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Optional«User»:
    type: object
    properties:
      present:
        type: boolean
    title: Optional«User»
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
      statusCodeValue:
        type: integer
        format: int32
    title: ResponseEntity
  User:
    type: object
    properties:
      Address:
        type: string
      City:
        type: string
      ContactNumber:
        type: string
      DateOfBirth:
        type: string
      FirstName:
        type: string
      LastName:
        type: string
      id:
        type: integer
        format: int64
    title: User
